/******************************************************************************
Linked List 4:
Given head of a LL, delete every alternate element starting from second element

1->2->3->4->5->6
delete: 2,4,6....
*******************************************************************************/
#include <iostream>
using namespace std;

class Node{
    public:
        int val;
        Node* next;

    Node(int data){
        val=data;
        next=NULL;
    }
};

void deleteAlt(Node* &head){
    Node* prev=head;
    Node* temp=NULL;
    while(prev!=NULL && prev->next!=NULL){
            temp=prev->next;
            prev->next=prev->next->next;
            free(temp);
            prev=prev->next;
    }
}

class LinkedList{
    public:
        Node* head;
    
    LinkedList(){
        head=NULL;
    }
    
    void insertAtEnd(int val){
        Node* new_node=new Node(val);
        if(head==NULL){
            // empty LL
            head=new_node;
            return;
        }
        Node* temp= head;
        while(temp->next!=NULL){
            temp=temp->next;
        }
        temp->next=new_node;
    }
    
    void print(){
        Node* temp=head;
        while(temp!=NULL){
            cout<<temp->val<<"->";
            temp=temp->next;
        }
        cout<<"NULL"<<endl;    
    }
};


int main()
{
    LinkedList ll;
    // ll.insertAtEnd(8);
    ll.insertAtEnd(7);
    ll.insertAtEnd(6);
    ll.insertAtEnd(5);
    ll.insertAtEnd(4);
    ll.insertAtEnd(3);
    ll.insertAtEnd(2);
    ll.insertAtEnd(1);
    ll.print();
    deleteAlt(ll.head);
    ll.print();
    
    return 0;
}
